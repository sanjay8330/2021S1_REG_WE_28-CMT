var helpers = require("../../node_modules/@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
helpers.prelude(module);
try {
  var _parcelHelpers = require("@parcel/transformer-js/lib/esmodule-helpers.js");
  _parcelHelpers.defineInteropFlag(exports);
  var _react = require('react');
  var _reactDefault = _parcelHelpers.interopDefault(_react);
  var _axios = require('axios');
  var _axiosDefault = _parcelHelpers.interopDefault(_axios);
  var _reactSelect = require('react-select');
  var _reactSelectDefault = _parcelHelpers.interopDefault(_reactSelect);
  var _jsxFileName = "C:\\Users\\HP\\Desktop\\Assignments\\AF Project\\client\\components\\AppUser\\createUser.js";
  const initialState = {
    "name": '',
    "category": '',
    "email": '',
    "password": '',
    "contact": '',
    "confirmPassword": '',
    "options": []
  };
  class AddUser extends _react.Component {
    constructor(props) {
      super(props);
      this.onChange = this.onChange.bind(this);
      this.onSubmit = this.onSubmit.bind(this);
      this.state = initialState;
    }
    componentDidMount() {
      let data = [];
      let userType1 = {
        value: 'Reviewer',
        label: 'Reviewer'
      };
      let userType2 = {
        value: 'Editor',
        label: 'Editor'
      };
      let userType3 = {
        value: 'Administrator',
        label: 'Administrator'
      };
      data.push(userType1);
      data.push(userType2);
      this.setState({
        options: data
      });
    }
    onChange(e) {
      this.setState({
        [e.target.name]: e.target.value
      });
    }
    onSubmit(e) {
      e.preventDefault();
      if (!this.state.password === this.state.confirmPassword) {
        alert('Password Mismatch!!');
      }
      let user = {
        "userName": this.state.name,
        "userCategory": this.state.category,
        "userEmail": this.state.email,
        "userPassword": this.state.password,
        "userContact": this.state.contact
      };
      _axiosDefault.default.post('http://localhost:3001/user/addUser', user).then(response => {
        alert('Data added Successfully!');
      }).catch(error => {
        alert(error.message);
      });
    }
    render() {
      return (
        /*#__PURE__*/_reactDefault.default.createElement("div", {
          className: "container",
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 68,
            columnNumber: 13
          }
        }, /*#__PURE__*/_reactDefault.default.createElement("h3", {
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 69,
            columnNumber: 17
          }
        }, "Add Application User Details"), /*#__PURE__*/_reactDefault.default.createElement("form", {
          onSubmit: this.onSubmit,
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 70,
            columnNumber: 17
          }
        }, /*#__PURE__*/_reactDefault.default.createElement(_reactSelectDefault.default, {
          options: this.state.options,
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 71,
            columnNumber: 21
          }
        }), /*#__PURE__*/_reactDefault.default.createElement("div", {
          className: "mb-3",
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 74,
            columnNumber: 21
          }
        }, /*#__PURE__*/_reactDefault.default.createElement("label", {
          htmlFor: "username",
          className: "form-label",
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 75,
            columnNumber: 25
          }
        }, "Username"), /*#__PURE__*/_reactDefault.default.createElement("input", {
          type: "text",
          className: "form-control",
          id: "name",
          name: "name",
          value: this.state.name,
          onChange: this.onChange,
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 76,
            columnNumber: 25
          }
        })), /*#__PURE__*/_reactDefault.default.createElement("div", {
          className: "mb-3",
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 85,
            columnNumber: 21
          }
        }, /*#__PURE__*/_reactDefault.default.createElement("label", {
          htmlFor: "email",
          className: "form-label",
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 86,
            columnNumber: 25
          }
        }, "Email Address"), /*#__PURE__*/_reactDefault.default.createElement("input", {
          type: "email",
          className: "form-control",
          id: "email",
          name: "email",
          value: this.state.email,
          onChange: this.onChange,
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 87,
            columnNumber: 25
          }
        })), /*#__PURE__*/_reactDefault.default.createElement("div", {
          className: "mb-3",
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 96,
            columnNumber: 21
          }
        }, /*#__PURE__*/_reactDefault.default.createElement("label", {
          htmlFor: "password",
          className: "form-label",
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 97,
            columnNumber: 25
          }
        }, "Password"), /*#__PURE__*/_reactDefault.default.createElement("input", {
          type: "password",
          className: "form-control",
          id: "password",
          name: "password",
          value: this.state.password,
          onChange: this.onChange,
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 98,
            columnNumber: 25
          }
        })), /*#__PURE__*/_reactDefault.default.createElement("div", {
          className: "mb-3",
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 107,
            columnNumber: 21
          }
        }, /*#__PURE__*/_reactDefault.default.createElement("label", {
          htmlFor: "confirmPassword",
          className: "form-label",
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 108,
            columnNumber: 25
          }
        }, "Confirm Password"), /*#__PURE__*/_reactDefault.default.createElement("input", {
          type: "password",
          className: "form-control",
          id: "confirmPassword",
          name: "confirmPassword",
          value: this.state.confirmPassword,
          onChange: this.onChange,
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 109,
            columnNumber: 25
          }
        })), /*#__PURE__*/_reactDefault.default.createElement("div", {
          className: "mb-3",
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 118,
            columnNumber: 21
          }
        }, /*#__PURE__*/_reactDefault.default.createElement("label", {
          htmlFor: "contactNumber",
          className: "form-label",
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 119,
            columnNumber: 25
          }
        }, "Contact Number"), /*#__PURE__*/_reactDefault.default.createElement("input", {
          type: "tel",
          pattern: "[0-9]{10}",
          className: "form-control",
          id: "contact",
          name: "contact",
          value: this.state.contact,
          onChange: this.onChange,
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 120,
            columnNumber: 25
          }
        })), /*#__PURE__*/_reactDefault.default.createElement("button", {
          type: "submit",
          className: "btn btn-primary",
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 131,
            columnNumber: 21
          }
        }, "Submit")))
      );
    }
  }
  exports.default = AddUser;
  helpers.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}
